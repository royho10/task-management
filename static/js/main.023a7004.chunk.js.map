{"version":3,"sources":["components/Navigation/Navigation.js","components/Greeting/Greeting.js","containers/AddAnotherTask/AddAnotherTask.js","containers/AddAnotherList/AddAnotherList.js","containers/ChangeListName/ChangeListName.js","containers/ChangeTaskName/ChangeTaskName.js","components/ListsList/ListsList.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","className","onClick","Greeting","name","AddAnotherTask","props","state","isAddAnotherTaskOn","title","onInputChange","bind","onClickAddAnotherTask","onSubmitForm","onClickX","event","this","setState","target","value","preventDefault","onSubmitNewTask","list_id","type","onSubmit","placeholder","onChange","Component","AddAnotherList","onClickAddAnotherList","isAddAnotherListOn","onclickX","onSubmitNewList","ChangeListName","isChangeListNameOn","onClickChangeListName","onSubmitChangeListName","ChangeTaskName","isChangeTaskNameOn","onClickChangeTaskName","onSubmitChangeTaskName","task_id","ListsList","newList","SubmitNewList","newTask","SubmitNewTask","newListTitle","SubmitNewListName","newTaskTitle","SubmitNewTaskName","lists","map","list","i","key","deleteList","tasks","task","deleteTask","id","SignIn","onEmailChange","signInEmail","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","userData","console","log","first_name","loadUser","htmlFor","Register","onFirstNameChange","onLastNameChange","last_name","onSubmitRegister","user","initialState","route","joined","App","data","newTasks","newLists","new_title","newtaskTitle","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.023a7004.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\tif (isSignedIn) {\r\n\t\treturn (\r\n\t\t\t<nav className=\"nav-bar\">\r\n\t\t\t\t<h1 className=\"logo\">TaskIT</h1>\r\n\t\t\t\t<ul className=\"main-nav\">\r\n\t\t\t\t\t<li className=\"link dim pointer\" onClick={() => onRouteChange('signin')}>Log Out</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav className=\"nav-bar\">\r\n\t\t\t\t<h1 className=\"logo\">TaskIT</h1>\r\n\t\t\t\t<ul className=\"main-nav\">\r\n\t\t\t\t\t<li className=\"link dim pointer mr4\" onClick={() => onRouteChange('signin')}>Sign In</li>\r\n\t\t\t\t\t<li className=\"link dim pointer\" onClick={() => onRouteChange('resgister')}>Register</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Greeting = ({ name }) => {\r\n\treturn (\r\n\t\t<div className='f3 mv2'>\r\n\t\t\t{`Hello ${name}, nice to have you back :)`}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Greeting;","import React, { Component } from 'react';\r\nimport '../../components/ChangeTextCss.css';\r\n\r\nclass AddAnotherTask extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisAddAnotherTaskOn: false,\r\n\t\t\ttitle: \"\"\r\n\t\t}\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onClickAddAnotherTask = this.onClickAddAnotherTask.bind(this);\r\n\t\tthis.onSubmitForm = this.onSubmitForm.bind(this);\r\n\t\tthis.onClickX = this.onClickX.bind(this);\r\n\t}\r\n\r\n\t// handling new task input changes\r\n\tonInputChange(event) {\r\n\t\tthis.setState({ title: event.target.value })\r\n\t}\r\n\r\n\t// changing display when clicking on \"Add Another Task\" button\r\n\tonClickAddAnotherTask() {\r\n\t\tthis.setState({ isAddAnotherTaskOn: true })\r\n\t}\r\n\r\n\t// changing display when clicking on \"X\" button\r\n\tonClickX() {\r\n\t\tthis.setState({ \r\n\t\t\tisAddAnotherTaskOn: false,\r\n\t\t})\r\n\t}\r\n\r\n\t// transfering the new task to ListsList component\r\n\tonSubmitForm(event) {\r\n\t\t// Preventing the explorer to refresh every time the user press enter or clicking the submit button by default\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmitNewTask(this.state.title, this.props.list_id);\r\n\t\t// resets the state\t\t\r\n\t\tthis.setState({ \r\n\t\t\tisAddAnotherTaskOn: false,\r\n\t\t\ttitle: \"\" \r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ this.state.isAddAnotherTaskOn === false\r\n\t\t\t\t\t\t?\t(\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={this.onClickAddAnotherTask} type=\"button\"className=\"f7 link dim br2 pa1 ml3 dib black\">+ Add another task</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:   (\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmitForm} className=\"br2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"br2 container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className='item1'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f6 pa1 w-100'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter task title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange }\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='item2'>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f7 mv1 pa1 br2 dim bg-green'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>Submit\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='f6 pa1 br2 dim bg-grey black item3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={this.onClickX}>X</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddAnotherTask;\r\n","import React, { Component } from 'react';\r\nimport '../../components/ChangeTextCss.css';\r\n\r\nclass AddAnotherList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisAddAnotherListOn: false,\r\n\t\t\ttitle: \"\"\r\n\t\t}\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onClickAddAnotherList = this.onClickAddAnotherList.bind(this);\r\n\t\tthis.onSubmitForm = this.onSubmitForm.bind(this);\r\n\t\tthis.onclickX = this.onclickX.bind(this);\r\n\t}\r\n\r\n\t// handling new list input changes\r\n\tonInputChange = (event) => {\r\n\t\tthis.setState({ title: event.target.value })\r\n\t}\r\n\r\n\t// changing display when clicking on \"Add Another List\" button\r\n\tonClickAddAnotherList = () => {\r\n\t\tthis.setState({ isAddAnotherListOn: true })\r\n\t}\r\n\r\n\t// changing display when clicking on \"X\" button\r\n\tonclickX = () => {\r\n\t\tthis.setState({ isAddAnotherListOn: false })\r\n\t}\r\n\r\n\t// transfering the new list to App container\r\n\tonSubmitForm = (event) => {\r\n\t\t// Preventing the explorer to refresh every time the user press enter or clicking the submit button by default\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmitNewList(this.state.title);\r\n\t\t// resets the state\r\n\t\tthis.setState({ \r\n\t\t\tisAddAnotherListOn: false,\r\n\t\t\ttitle: \"\" \r\n\t\t});\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ this.state.isAddAnotherListOn === false\r\n\t\t\t\t\t\t?\t(\r\n\t\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={this.onClickAddAnotherList} type=\"button\"className=\"f7 link dim br2 pa1 ml3 dib black\">+ Add another list</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: \t(\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmitForm} className=\"br2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"br2 container bg-moon-gray\">\r\n\t\t\t\t\t\t\t\t\t\t<div className='item1'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f6 pa1 w-100'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter list title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange }\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='item2'>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f7 mv1 pa1 br2 dim bg-green'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>Submit\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='f6 pa1 br2 dim bg-grey black item3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={this.onclickX}>X</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t)\r\n  \r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddAnotherList;","import React, { Component } from 'react';\r\nimport '../../components/ChangeTextCss.css';\r\n\r\nclass ChangeListName extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisChangeListNameOn: false,\r\n\t\t\ttitle: \"\"\r\n\t\t}\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onClickChangeListName = this.onClickChangeListName.bind(this);\r\n\t\tthis.onSubmitForm = this.onSubmitForm.bind(this);\r\n\t\tthis.onClickX = this.onClickX.bind(this);\r\n\t}\r\n\r\n\t// handling new list name input changes\r\n\tonInputChange(event) {\r\n\t\tthis.setState({ title: event.target.value })\r\n\t}\r\n\r\n\t// changing display when clicking on \"Change List Name\" button\r\n\tonClickChangeListName() {\r\n\t\tthis.setState({ isChangeListNameOn: true })\r\n\t}\r\n\r\n\t// changing display when clicking on \"X\" button\r\n\tonClickX() {\r\n\t\tthis.setState({ \r\n\t\t\tisChangeListNameOn: false,\r\n\t\t})\r\n\t}\r\n\r\n\t// transfering the new list to ListsList component\r\n\tonSubmitForm(event) {\r\n\t\t// Preventing the explorer to refresh every time the user press enter or clicking the submit button by default\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmitChangeListName(this.state.title, this.props.list_id);\r\n\t\t// resets the state\t\t\r\n\t\tthis.setState({ \r\n\t\t\tisChangeListNameOn: false,\r\n\t\t\ttitle: \"\" \r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ this.state.isChangeListNameOn === false\r\n\t\t\t\t\t\t?\t(\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\t\t\t\t\tonClick= {this.onClickChangeListName} \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"f7 link dim br2 pa1 ml3 dib black bg-grey\">\r\n\t\t\t\t\t\t\t\t\t\tchange list name\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:   (\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmitForm} className=\"br2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"br2 container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className='item1'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f6 pa1 w-100'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter new list title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange }\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='item2'>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f7 mv1 pa1 br2 dim bg-green'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>Submit\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='f6 pa1 br2 dim bg-grey black item3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={this.onClickX}>X</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChangeListName;\r\n","import React, { Component } from 'react';\r\nimport '../../components/ChangeTextCss.css';\r\n\r\nclass ChangeTaskName extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisChangeTaskNameOn: false,\r\n\t\t\ttitle: \"\"\r\n\t\t}\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onClickChangeTaskName = this.onClickChangeTaskName.bind(this);\r\n\t\tthis.onSubmitForm = this.onSubmitForm.bind(this);\r\n\t\tthis.onClickX = this.onClickX.bind(this);\r\n\t}\r\n\r\n\t// handling new task name input changes\r\n\tonInputChange(event) {\r\n\t\tthis.setState({ title: event.target.value })\r\n\t}\r\n\r\n\t// changing display when clicking on \"Change Task Name\" button\r\n\tonClickChangeTaskName() {\r\n\t\tthis.setState({ isChangeTaskNameOn: true })\r\n\t}\r\n\r\n\t// changing display when clicking on \"X\" button\r\n\tonClickX() {\r\n\t\tthis.setState({ \r\n\t\t\tisChangeTaskNameOn: false,\r\n\t\t})\r\n\t}\r\n\r\n\t// transfering the new task to ListsList component\r\n\tonSubmitForm(event) {\r\n\t\t// Preventing the explorer to refresh every time the user press enter or clicking the submit button by default\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmitChangeTaskName(this.state.title, this.props.task_id);\r\n\t\t// resets the state\t\t\r\n\t\tthis.setState({ \r\n\t\t\tisChangeTaskNameOn: false,\r\n\t\t\ttitle: \"\" \r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{ this.state.isChangeTaskNameOn === false\r\n\t\t\t\t\t\t?\t(\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\t\t\t\t\tonClick= {this.onClickChangeTaskName} \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"f7 link dim br2 pa1 ml3 dib black\">\r\n\t\t\t\t\t\t\t\t\t\tchange task name\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:   (\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmitForm} className=\"br2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"br2 container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className='item1'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f7 pa1 w-100'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter new task title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange }\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='item2'>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='f7 mv1 pa1 br2 dim bg-green'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>Submit\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='f6 pa1 br2 dim bg-grey black item3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={this.onClickX}>X</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChangeTaskName;\r\n\r\n","import React, {Component} from 'react';\r\nimport AddAnotherTask from '../../containers/AddAnotherTask/AddAnotherTask';\r\nimport AddAnotherList from '../../containers/AddAnotherList/AddAnotherList';\r\nimport ChangeListName from '../../containers/ChangeListName/ChangeListName';\r\nimport ChangeTaskName from '../../containers/ChangeTaskName/ChangeTaskName';\r\nimport './ListsList.css';\r\n\r\nclass ListsList extends Component {\r\n\r\n\t// transfer new list to App container\r\n\tonSubmitNewList(newList) {\r\n\t\tthis.props.SubmitNewList(newList);\r\n\t}\r\n\r\n\t// transfer new task to App container\r\n\tonSubmitNewTask(newTask, list_id) {\r\n\t\tthis.props.SubmitNewTask(newTask, list_id);\r\n\t}\r\n\r\n\t// transfer new list name to App container\r\n\tonSubmitChangeListName(newListTitle, list_id) {\r\n\t\tthis.props.SubmitNewListName(newListTitle, list_id);\r\n\t}\r\n\r\n\t// transfer new task name to App container\r\n\tonSubmitChangeTaskName(newTaskTitle, task_id) {\r\n\t\tthis.props.SubmitNewTaskName(newTaskTitle, task_id);\r\n\t}\r\n\r\n\t// rendering the lists\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t<ul className=\"flex\">\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\t// rendering lists\r\n\t\t\t\t\t\tthis.props.lists.map((list, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={list.list_id} className=\"mh2 br2\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"flex-column list br2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb1\">\r\n\t\t\t\t\t\t\t\t\t\t\t{list.title}\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.props.deleteList(list.list_id)} className=\"f7 link dim br2 pa1 ml3 dib white bg-red\">delete</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<ChangeListName\r\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmitChangeListName={this.onSubmitChangeListName.bind(this)} \r\n\t\t\t\t\t\t\t\t\t\t\t\tlist_id={list.list_id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"flex flex-column\">\r\n\t\t\t\t\t\t\t\t\t\t\t{ \t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// rendering tasks\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.tasks.map((task) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttask.list_id === list.list_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t?\t<li key={task.task_id} className=\"task br2 mh2 mb1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{task.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.props.deleteTask(task.task_id)} className=\"f7 link dim br2 pa1 ml3 dib white bg-red\">delete</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ChangeTaskName \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mh2 pa0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSubmitChangeTaskName={this.onSubmitChangeTaskName.bind(this)} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist_id={list.list_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttask_id={task.task_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t<div id={i} className=\"task br2 mh2 mb2 pt1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* handlling adding another task button*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<AddAnotherTask \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSubmitNewTask={this.onSubmitNewTask.bind(this)} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlist_id={list.list_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<AddAnotherList\r\n\t\t\t\t\tonSubmitNewList={this.onSubmitNewList.bind(this)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\t\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default ListsList;","import React, {Component} from 'react';\r\n\r\nclass SignIn extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({ signInEmail: event.target.value })\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({ signInPassword: event.target.value })\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\t// fetching the user's signin data\r\n\t\tfetch('http://localhost:3000/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t//routing homepage and loading user's information if the user is exists\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(userData => {\r\n\t\t\t\tif (userData === 'wrong credentials') {\r\n\t\t\t\t\treturn console.log('wrong credentials');\r\n\t\t\t\t}\r\n\t\t\t\tif (userData.first_name) {\r\n\t\t\t\t\tthis.props.loadUser(userData);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80 center\">\r\n\t\t\t\t  \t<div className=\"measure\">\r\n\t\t\t\t    \t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t      \t<legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t\t      \t<div className=\"mt3\">\r\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t\t        \t<input \r\n\t\t\t\t\t        \t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \t\ttype=\"email\" \r\n\t\t\t\t\t        \t\tname=\"email-address\"  \r\n\t\t\t\t\t        \t\tid=\"email-address\"\r\n\t\t\t\t\t        \t\tonChange={this.onEmailChange}\r\n\t\t\t\t\t        \t/>\r\n\t\t\t\t\t      \t</div>\r\n\t\t\t\t\t      \t<div className=\"mv3\">\r\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t        \t<input \r\n\t\t\t\t\t        \t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \t\ttype=\"password\" \r\n\t\t\t\t\t        \t\tname=\"password\"  \r\n\t\t\t\t\t        \t\tid=\"password\"\r\n\t\t\t\t\t        \t\tonChange={this.onPasswordChange}\r\n\t\t\t\t\t        \t/>\r\n\t\t\t\t\t      \t</div>\r\n\t\t\t\t    \t</fieldset>\r\n\t\t\t\t\t    <div className=\"\">\r\n\t\t\t\t\t        <input\r\n\t\t\t\t\t        \tonClick={this.onSubmitSignIn} \r\n\t\t\t\t\t      \t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t      \t    type=\"submit\" \r\n\t\t\t\t\t      \t    value=\"Sign in\" \r\n\t\t\t\t\t        />\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t\t      <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim black pointer db\">Register</p>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\t\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from 'react';\r\n\r\nclass Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tfirst_name: '',\r\n\t\t\tlast_name: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange = (event) => {\r\n\t\tthis.setState({ first_name: event.target.value })\r\n\t}\r\n\r\n\tonLastNameChange = (event) => {\r\n\t\tthis.setState({ last_name: event.target.value })\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value })\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value })\r\n\t}\r\n\r\n\tonSubmitRegister = () => {\r\n\t\t// fetching the user's register data\r\n\t\tfetch('http://localhost:3000/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tfirst_name: this.state.first_name,\r\n\t\t\t\tlast_name: this.state.last_name\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t// routing homepage if the user is exists\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\t\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\t\t\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80 center\">\r\n\t\t\t\t  \t<div className=\"measure\">\r\n\t\t\t\t    \t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t      \t<legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t\t      \t<div className=\"mt3\">\r\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">First Name</label>\r\n\t\t\t\t\t        \t<input \r\n\t\t\t\t\t        \t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \t\ttype=\"text\" \r\n\t\t\t\t\t        \t\tname=\"first_name\"  \r\n\t\t\t\t\t        \t\tid=\"first_name\" \r\n\t\t\t\t\t        \t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t        \t/>\r\n\t\t\t\t\t      \t</div>\r\n\t\t\t\t\t      \t\t<div className=\"mt3\">\r\n\t\t\t\t\t      \t  \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Last Name</label>\r\n\t\t\t\t\t      \t  \t<input \r\n\t\t\t\t\t      \t  \t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t      \t  \t\ttype=\"text\" \r\n\t\t\t\t\t      \t  \t\tname=\"last_name\"  \r\n\t\t\t\t\t      \t  \t\tid=\"last_name\" \r\n\t\t\t\t\t      \t  \t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t      \t  \t/>\r\n\t\t\t\t\t      \t\t</div>\t\t\t\t\t      \t\r\n\t\t\t\t\t      \t<div className=\"mt3\">\r\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t\t        \t<input \r\n\t\t\t\t\t        \t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \t\ttype=\"email\" \r\n\t\t\t\t\t        \t\tname=\"email-address\"  \r\n\t\t\t\t\t        \t\tid=\"email-address\" \r\n\t\t\t\t\t        \t\tonChange={this.onEmailChange}\r\n\t\t\t\t\t        \t/>\r\n\t\t\t\t\t      \t</div>\r\n\t\t\t\t\t      \t<div className=\"mv3\">\r\n\t\t\t\t\t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t        \t<input \r\n\t\t\t\t\t        \t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \t\ttype=\"password\" \r\n\t\t\t\t\t        \t\tname=\"password\"  \r\n\t\t\t\t\t        \t\tid=\"password\" \r\n\t\t\t\t\t        \t\tonChange={this.onPasswordChange}\r\n\t\t\t\t\t        \t/>\r\n\t\t\t\t\t      \t</div>\r\n\t\t\t\t    \t</fieldset>\r\n\t\t\t\t\t    <div className=\"\">\r\n\t\t\t\t\t        <input\r\n\t\t\t\t\t        \tonClick={this.onSubmitRegister} \r\n\t\t\t\t\t      \t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t      \t    type=\"submit\" \r\n\t\t\t\t\t      \t    value=\"Register\" \r\n\t\t\t\t\t        />\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\t\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation';\nimport Greeting from '../components/Greeting/Greeting';\nimport ListsList from '../components/ListsList/ListsList';\nimport SignIn from '../components/SignIn/SignIn';\nimport Register from '../components/Register/Register';\n\nconst initialState = {\n\troute: 'signin',\n\tisSignedIn: false,\n\tuser: {\n\t\tfirst_name: '',\n\t\tlast_name: '',\n\t\temail: '',\n\t\tlists: [],\n\t\ttasks: [],\n\t\tjoined: ''\t\t\t\n\t}\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\troute: 'signin',\n\t\t\tisSignedIn: false,\n\t\t\tuser: {\n\t\t\t\tfirst_name: '',\n\t\t\t\tlast_name: '',\n\t\t\t\temail: '',\n\t\t\t\tlists: [],\n\t\t\t\ttasks: [],\n\t\t\t\tjoined: ''\t\t\t\n\t\t\t}\n\t\t}\n\t\tthis.SubmitNewList=this.SubmitNewList.bind(this);\n\t\tthis.SubmitNewTask=this.SubmitNewTask.bind(this);\n\t\tthis.deleteTask=this.deleteTask.bind(this);\n\t\tthis.deleteList=this.deleteList.bind(this);\n\t\tthis.onRouteChange=this.onRouteChange.bind(this);\n\t}\n\n\t// changing routes function\n\tonRouteChange = (route) => {\n\t\tif (route === 'signin' || route === 'register') {\n\t\t\tthis.setState(initialState)\n\t\t} else if (route === 'home') {\n\t\t\tthis.setState({ isSignedIn: true })\n\t\t}\n\t\tthis.setState({ route: route })\n\t}\n\n\t// everytime something is changing in the user's info - it updates the state\n\tloadUser = (data) => {\n\t\tthis.setState({ \n\t\t\tuser: {\n\t\t\t\tfirst_name: data.first_name,\n\t\t\t\tlast_name: data.last_name,\n\t\t\t\temail: data.email,\n\t\t\t\tlists: data.lists,\n\t\t\t\ttasks: data.tasks\n\t\t\t},\n\t\t});\n\t}\n\n\t// adding new list\n\tSubmitNewList = (newList) => {\t\t\n\t// fetching the user's new list\n\t\tfetch('http://localhost:3000/lists', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\ttitle: newList\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's lists\n\t\t.then(lists => {\n\t\t\tthis.setState({ \n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\tlists: lists\n\t\t\t\t}\n\t\t\t});\n\n\t\t})\n\t}\n\n\t// adding new task\n\tSubmitNewTask = (newTask, list_id) => {\n\t\t// fetching the user's new task\n\t\tfetch('http://localhost:3000/tasks', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\ttitle: newTask,\n\t\t\t\tlist_id: list_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's tasks\n\t\t.then(tasks => {\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\ttasks: tasks\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\n\n\t// delete chosen task\n\tdeleteTask = (task_id) => {\n\t\tfetch('http://localhost:3000/tasks', {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\ttask_id: task_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's tasks without the deleted task\n\t\t.then(newTasks => {\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\ttasks: newTasks\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\n\n\t// delete chosen list\n\tdeleteList = (list_id) => {\n\t\tfetch('http://localhost:3000/lists', {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\tlist_id: list_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's tasks without the deleted list\n\t\t.then(newLists => {\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\tlists: newLists\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\n\n\t// change list name\n\tSubmitNewListName = (newListTitle, list_id) => {\n\t\tfetch('http://localhost:3000/lists', {\n\t\t\tmethod: 'put',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\tlist_id: list_id,\n\t\t\t\tnew_title: newListTitle\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's lists\n\t\t.then(newLists => {\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\tlists: newLists\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\t\n\n\t// change task name\n\tSubmitNewTaskName = (newtaskTitle, task_id) => {\n\t\tfetch('http://localhost:3000/tasks', {\n\t\t\tmethod: 'put',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\ttask_id: task_id,\n\t\t\t\tnew_title: newtaskTitle\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t// returning all the user's lists\n\t\t.then(newTasks => {\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\t...this.state.user,\n\t\t\t\t\ttasks: newTasks\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { isSignedIn, route, user } = this.state\n\t  \treturn (\n\t    \t<div className=\"App\">\n\t      \t\t<Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n\t      \t\t{ route === 'home'\n\t\t      \t\t? \t<div>\n\t\t      \t\t\t\t<Greeting name={user.first_name} />\n\t\t\t      \t\t\t<ListsList\n\t\t\t\t      \t\t\tlists={user.lists} \n\t\t\t\t      \t\t\ttasks={user.tasks}\n\t\t\t\t      \t\t\tSubmitNewTask={this.SubmitNewTask}\n\t\t\t\t      \t\t\tSubmitNewList={this.SubmitNewList}\n\t\t\t\t      \t\t\tSubmitNewListName={this.SubmitNewListName}\n\t\t\t\t      \t\t\tSubmitNewTaskName={this.SubmitNewTaskName} \n\t\t\t\t      \t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t      \t\t\tdeleteList={this.deleteList}\n\t\t\t\t      \t\t/>\n\t\t\t\t      \t</div>\n\t\t\t\t    :  \t(\n\t\t\t\t    \t\troute === 'signin'\n\t\t\t\t    \t\t?   <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n\t\t\t\t    \t\t:   <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n\t\t\t\t    \t)\n\t      \t\t}\n\t    \t</div>\n\t  \t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}